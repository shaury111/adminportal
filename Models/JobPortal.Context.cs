//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SiteAllAdmin.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JobPortalEntities : DbContext
    {
        public JobPortalEntities()
            : base("name=JobPortalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AboutUsPage> AboutUsPages { get; set; }
        public virtual DbSet<Addextrafeature> Addextrafeatures { get; set; }
        public virtual DbSet<Admintable> Admintables { get; set; }
        public virtual DbSet<ApplicationEnquiry> ApplicationEnquiries { get; set; }
        public virtual DbSet<Blog> Blogs { get; set; }
        public virtual DbSet<BorrowEnquiry> BorrowEnquiries { get; set; }
        public virtual DbSet<CustomerStatement> CustomerStatements { get; set; }
        public virtual DbSet<HomeEnquiry> HomeEnquiries { get; set; }
        public virtual DbSet<HomeSlider> HomeSliders { get; set; }
        public virtual DbSet<jobSubcategory> jobSubcategories { get; set; }
        public virtual DbSet<SeoSetting> SeoSettings { get; set; }
        public virtual DbSet<SiteSetting> SiteSettings { get; set; }
        public virtual DbSet<StatusKeyPair> StatusKeyPairs { get; set; }
        public virtual DbSet<tbl_customercomplaint> tbl_customercomplaint { get; set; }
        public virtual DbSet<tblcategory> tblcategories { get; set; }
        public virtual DbSet<tblcity> tblcities { get; set; }
        public virtual DbSet<tblenquiry> tblenquiries { get; set; }
        public virtual DbSet<tbljobimage> tbljobimages { get; set; }
        public virtual DbSet<tbljoblist> tbljoblists { get; set; }
        public virtual DbSet<tblLiveEnquiry> tblLiveEnquiries { get; set; }
        public virtual DbSet<tblnotification> tblnotifications { get; set; }
        public virtual DbSet<tblPayment> tblPayments { get; set; }
        public virtual DbSet<tblproduct> tblproducts { get; set; }
        public virtual DbSet<tblregistration> tblregistrations { get; set; }
        public virtual DbSet<tblrole> tblroles { get; set; }
        public virtual DbSet<tblstate> tblstates { get; set; }
        public virtual DbSet<UserDetail> UserDetails { get; set; }
        public virtual DbSet<WebGallery> WebGalleries { get; set; }
        public virtual DbSet<WebSiteNotice> WebSiteNotices { get; set; }
    
        public virtual ObjectResult<SP_Categorywisejobfetch_Result> SP_Categorywisejobfetch(Nullable<int> fldcatid, Nullable<int> jobSubCategoryId)
        {
            var fldcatidParameter = fldcatid.HasValue ?
                new ObjectParameter("fldcatid", fldcatid) :
                new ObjectParameter("fldcatid", typeof(int));
    
            var jobSubCategoryIdParameter = jobSubCategoryId.HasValue ?
                new ObjectParameter("JobSubCategoryId", jobSubCategoryId) :
                new ObjectParameter("JobSubCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Categorywisejobfetch_Result>("SP_Categorywisejobfetch", fldcatidParameter, jobSubCategoryIdParameter);
        }
    
        public virtual ObjectResult<SP_Categorywisejobfetch__Result> SP_Categorywisejobfetch_(Nullable<int> fldcatid, Nullable<int> jobSubCategoryId)
        {
            var fldcatidParameter = fldcatid.HasValue ?
                new ObjectParameter("fldcatid", fldcatid) :
                new ObjectParameter("fldcatid", typeof(int));
    
            var jobSubCategoryIdParameter = jobSubCategoryId.HasValue ?
                new ObjectParameter("JobSubCategoryId", jobSubCategoryId) :
                new ObjectParameter("JobSubCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Categorywisejobfetch__Result>("SP_Categorywisejobfetch_", fldcatidParameter, jobSubCategoryIdParameter);
        }
    }
}
